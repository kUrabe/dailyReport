・日報システム仕様
  1.ユーザ認証
　　　a.概要
　　　　　a-1.日報システムに対するユーザ認証機能（ログインフォーム）
　　　b.仕様
　　　　　b-1.システムにアクセスした際、認証済み情報が存在しない場合は必ずログインフォームが開かれる。
　　　　　b-2.DBに登録済みのユーザID、およびパスワードを用いて認証を行う。
　　　　　b-3.パスワードはハッシュ化したものをDBに保存する。
　　　　　b-4.ユーザ権限は「管理者」と「ユーザ」を設ける。
　　　　　b-5.ログイン後は日報表示（一覧）画面へ遷移する。

  2.日報作成、変更、削除
　　　a.概要
　　　　　a-1.日報の作成、変更、削除機能
　　　b.仕様
　　　　　b-1.新規日報をフォーマットに則り作成する機能。
　　　　　b-2.既存日報に対して変更を加える機能。
　　　　　b-3.既存日報を削除する機能（フラグ等による論理削除）。
　　　　　b-4.既存日報の変更および削除は自身が作成した日報に対してのみ可能（ただし、管理者はすべての日報に対して変更および削除が可能）。
　　　　　b-5.新規日報作成時、下書き保存機能（全体には公開されず、自身だけが閲覧可能）。
　　　　　b-6.何日付の日報であるか指定することを可能とする（別途、初回作成日や更新日は保持）。
　　　　　b-7.新規作成時、自身が投稿している最新の日報（基本は前日となる）から、「前日予定（仮称）」を抽出し、作成する日報の「結果（仮称）」へ継承する機能を持たせる。
　　　　　b-8.下書き状態の日報（全体公開前）については物理削除とする。
　　　　　b-9.記事の状態は複数の状況を管理できる「ステータス」カラムを用意し、bitフラグで複数状況を管理する。
　　　　　b-10.新規作成と変更時には固定項目を除く、見出し項目を追加、削除できる（名称も変更可）。ここでいう見出し項目とは「問題」「原因」など。

  3.日報表示（一覧、詳細）
　　　a.概要
　　　　　a-1.日報の概要表示と詳細表示（画面遷移は行わない）
　　　b.仕様【一覧表示】
　　　　　b-1.当該画面における日付とは、すべて「何日付の日報」であるかの日付を指す。
　　　　　b-2.初期表示は概要のみを表示する
　　　　　b-3.日報の概要（何日付の日報、投稿者、全体既読数、自身が既読済みか否か、コメント数(当該日報に対する)、いいね数）を一覧化して表示する画面（機能）。
　　　　　b-4.自身が作成している下書き日報（マーク等で明示）も表示される（他ユーザからは閲覧不可）。
　　　　　b-5.初期表示は当日日付から3日分、全ユーザ分（自分の下書きは含む）を表示。
　　　　　b-6.日付（範囲）や投稿ユーザ、下書き日報か否かで絞り込み機能。
　　　　　b-7.概要を選択することで、詳細情報を表示する（アコーディオン形式を想定）。
   c.詳細表示【詳細表示】
　　　　　c-1.日報の詳細を表示する。
　　　　　c-2.日報に付随するコメントがある場合は、▽マークを付与して、それをクリックすることによりコメントを表示する（アコーディオン形式を想定）。
　　　　　c-3.コメントにコメントがある場合も、▽マークを付与して、それをクリックすることによりコメントを表示する（アコーディオン形式を想定）。
　　　　　c-4.当該日報の変更画面への遷移が可能。
　　　　　c-5.当該日報の削除が可能（論理削除（下書き時は物理削除））。
　　　　　c-6.当該日報に紐付くコメントの投稿、変更、削除が可能（変更、削除に関しては投稿者か管理者のみ）。画面遷移はせずに投稿を行う。

  4.日報へのコメント作成、変更、削除
　　　a.概要
　　　　　コメントの作成、変更、削除についての機能
　　　b.仕様
　　　　　b-1.日報の詳細表示に実装する（概要だけが表示されている状態ではコメントでない）。
　　　　　b-2.対象の日報に紐付くコメントを投稿する機能。
　　　　　b-3.既存コメントに対して変更を加える機能。
　　　　　b-4.既存コメントを削除する機能（論理削除）。ただし、子のコメントに対する論理削除は行わない。
　　　　　b-5.論理削除されたコメントを表示しない。また、そのコメントに紐付く子のコメントも表示しない。
　　　　　b-6.既存コメントの変更および削除は自身が投稿したコメントに対してのみ可能（ただし、管理者はすべてのコメントに対して変更および削除が可能）。

  5.コメント表示
　　　a.概要
　　　　　コメントの表示機能
　　　b.仕様
　　　　　b-1.日報の詳細表示合わせて実装する（概要表示時には見えない）。
　　　　　b-2.コメントの投稿、変更、削除の機能を呼び出すことが可能。
　　　　　b-3.投稿ユーザおよび投稿日付を内容と合わせて表示する。

  6.いいね的投票機能、取り消し
    f-1.概要
      日報に対し、いいね機能として投票が可能になるもの
    f-2.処理内容
      日報に対して、いいねボタンがあり、それが押される事で投票される。
      投票された件数をデータとして保持する。他機能でもデータを使用可能。
      投票の取り消しが可能。件数が元に戻る。
      投票した該当の記事が削除された場合、データも削除され、件数が戻る。
  7.コメントへのコメント作成、変更、削除
    g-1.概要
      日報に対しコメントしたコメントに対しコメントする機能
      （ツリー状になるイメージ、直接コメントにコメントする）
      日報
        └コメント
          └コメント
            └コメント
    g-2.処理内容
      コメントに対し、コメントするボタンよりコメント編集を行う。
      コメント内容はデータとして保持し、元のコメントを親として持つ。
      コメント内容は編集が可能。編集された日付をデータとして残す。
      コメントは削除が可能。子データも併せて削除する。
      コメントのコメントのコメントの…無限に続けることは可能と考えられるが
      使いやすさを考え上限を３とする。ただし、定数などで簡単に変更できるようにすること。
      (日報のコメントのコメントのコメントまで、上記概要のイメージ)
  8.日報フォーマットの提供
    h-1.概要
      日報の内容をすべてテキストデータとして作成するのは大変なため、
      日報のフォーマットをシステムが提供し、利用者はその通り日報を作成できるようにするもの
      フォーマットというより、テンプレートというべきかもしれない。
    h-2.処理内容
      日報フォーマット作成画面よりフォーマットを作成する事が出来る。
      フォーマットは、大項目、中項目、小項目と設定可能。
      大項目は必須項目、中項目、小項目はぶら下がるため、上位が無ければ作成不可。
      各項目数に上限無し。
      作成された日報フォーマットを元に、日報の作成が行える。
      フォーマットは作成で使用される。変更、削除を考慮し、日報の変更と表示では使用しない。
      フォーマットは変更できる。
      フォーマットは削除できる。
      変更、表示する際にフォーマットを使用しないため、フォーマットの変更、削除後の記事に影響は無い。
  9.既読機能（未読へ戻す機能）
    i-1.概要
      この日報は既に読んだ、まだ読んでないを判別するフラグのような機能
    i-2.処理内容
      日報が作成された時点で、その日報を参照できるユーザに対し、データが作成される。
      該当ユーザが日報詳細を開いた時点で読んだとみなし、データを更新する。
      忙しく、開いたが読めなかった等を考慮し、既読の物を未読に戻す事が出来る。
      未読既読の情報は、日報の一覧画面で表示され、未読、既読を切り替える事が出来る。
      ※メモ:DB項目のフラグとして持つと、拡張性が無くなるため、ビット(整数?)で持っておくべきと考える。