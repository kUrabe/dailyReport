package dailyReport.resource;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * 部署detail モデルクラス.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity
@NamedQueries({
	@NamedQuery(
			name="departmentDetailAll",
			query="SELECT d FROM DepartmentDetail d")
})
@Table(name="department_detail")
public class DepartmentDetail implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 部署id. */
	@Id
	@Column(name="department_id")
	private Integer department_id;

	/** 部署タイトル. */
	@Column(name="department_title")
	private String department_title;

	/**
	 * コンストラクタ.
	 */
	public DepartmentDetail() {
	}

	/**
	 * 部署id を設定します.
	 * 
	 * @param department_id
	 *            部署id
	 */
	public void setDepartmentId(Integer department_id) {
		this.department_id = department_id;
	}

	/**
	 * 部署id を取得します.
	 * 
	 * @return 部署id
	 */
	public Integer getDepartmentId() {
		return this.department_id;
	}

	/**
	 * 部署タイトル を設定します.
	 * 
	 * @param department_title
	 *            部署タイトル
	 */
	public void setDepartmentTitle(String department_title) {
		this.department_title = department_title;
	}

	/**
	 * 部署タイトル を取得します.
	 * 
	 * @return 部署タイトル
	 */
	public String getDepartmentTitle() {
		return this.department_title;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((department_id == null) ? 0 : department_id.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		DepartmentDetail other = (DepartmentDetail) obj;
		if (department_id == null) {
			if (other.department_id != null) {
				return false;
			}
		} else if (!department_id.equals(other.department_id)) {
			return false;
		}
		return true;
	}

}
